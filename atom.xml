<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小陈茶室</title>
  
  <subtitle>淡然生活,微微小记</subtitle>
  <link href="http://chenxiuyuan7.github.io/atom.xml" rel="self"/>
  
  <link href="http://chenxiuyuan7.github.io/"/>
  <updated>2023-04-23T15:09:53.974Z</updated>
  <id>http://chenxiuyuan7.github.io/</id>
  
  <author>
    <name>小陈</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Tensprflow_day02</title>
    <link href="http://chenxiuyuan7.github.io/2023/04/23/Tensprflow-day02/"/>
    <id>http://chenxiuyuan7.github.io/2023/04/23/Tensprflow-day02/</id>
    <published>2023-04-23T14:45:47.000Z</published>
    <updated>2023-04-23T15:09:53.974Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1><span id="tensprflow-基础">Tensprflow 基础</span></h1><p>tf.constant(张量内容,dtype&#x3D;数据类型)<br></p><h2><span id="tensprflow中的数据类型">Tensprflow中的数据类型</span></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">tf.int8：8位整数。</span><br><span class="line">tf.int16：16位整数。</span><br><span class="line">tf.int32：32位整数。</span><br><span class="line">tf.int64：64位整数。</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">tf.uint8：8位无符号整数。</span><br><span class="line">tf.uint16：16位无符号整数。</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line">tf.float16：16位浮点数。</span><br><span class="line">tf.float32：32位浮点数。</span><br><span class="line">tf.float64：64位浮点数。</span><br><span class="line">tf.double：等同于tf.float64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tf.string：字符串</span><br><span class="line"></span><br><span class="line">tf.bool：布尔型</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">tf.complex64：64位复数</span><br><span class="line">tf.complex128：128位复数</span><br></pre></td></tr></table></figure><p>创建一个一维张量<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line"></span><br><span class="line">a = tf.constant([1, 5], dtype=tf.int64)//逗号前为张量内容，后为张量类型</span><br><span class="line"></span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure><br>输出结果<br> <img src="/Tensorflow02/Tensorflow1%E7%BB%93%E6%9E%9C1.png"><br> <br>红线中一个数字表示一维张量，这个数字是2表示有2个元素<br>将numpy格式数据转化为Tensor格式<br> <br><br> <img src="/%E6%95%B0%E6%8D%AE%E8%BD%AC%E5%8C%96.png"><br><br> 红色为需要转化的数据，白色为需要转化的类型</p><h2><span id="生成随机数">生成随机数</span></h2> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a = tf.random.normal([2, 2], mean=0.5, stddev=1)  # 随机数</span><br><span class="line">print(a)</span><br><span class="line">E = tf.random.truncated_normal([2, 2], mean=0.5, stddev=1)  # 随机数更集中(集中mean值)</span><br><span class="line">print(E)</span><br></pre></td></tr></table></figure><h3><span id="tensor自我类型转化">Tensor自我类型转化</span></h3><ul><li>tf.cast(张量名，dtype &#x3D; 数据类型)</li></ul><h3><span id="张量最大值">张量最大值</span></h3><ul><li>tf.reduce_max(张量名)</li></ul><h3><span id="张量最小值">张量最小值</span></h3><ul><li>tf.reduce_min(张量名)</li></ul><h3><span id="axis">axis</span></h3><ul><li>axis &#x3D; 1 表示横向</li><li>axis &#x3D; 0 表示纵向</li><li>axis 不执定，表示所有元素</li></ul><h3><span id="标记数据可训练">标记数据可训练</span></h3><ul><li><img src="/%E5%8F%AF%E8%AE%AD%E7%BB%83.png"></li></ul><h2><span id="tensorflow数学">Tensorflow数学</span></h2><ul><li>四则运算(维度相同才可以四则运算)  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tf.add# 加</span><br><span class="line">tf.subtract# 减</span><br><span class="line">tf.multiply# 乘</span><br><span class="line">张量.assign_sub(x) # 自减x </span><br><span class="line">tf.divide# 除</span><br></pre></td></tr></table></figure></li><li>方  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tf.square # 平方</span><br><span class="line">tf.pow # 次方</span><br><span class="line">tf.sqrf # 开方</span><br></pre></td></tr></table></figure></li><li>矩阵乘    <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tf.matmul # 矩阵乘法</span><br></pre></td></tr></table></figure></li></ul><h2><span id="将输入特征和标签绑定">将输入特征和标签绑定</span></h2><p>  <img src="/%E6%A0%87%E7%AD%BE%E9%85%8D%E5%AF%B9.png"></p><h2><span id="将数据正态分布">将数据正态分布</span></h2><pre><code>tf.nn.softmax(张量)  # 使输出符合正态分布</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot; class=&quot;aplayer-se</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Tensprflow_day01</title>
    <link href="http://chenxiuyuan7.github.io/2023/04/18/Tensprflow-day01/"/>
    <id>http://chenxiuyuan7.github.io/2023/04/18/Tensprflow-day01/</id>
    <published>2023-04-18T06:34:41.000Z</published>
    <updated>2023-04-18T06:37:51.057Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1><span id="tensprflow">Tensprflow</span></h1><h2><span id="1安装anaconda无脑下一步">1.安装Anaconda（无脑下一步）</span></h2><h2><span id="2安装tensorflow">2.安装Tensorflow</span></h2><p>pip install tensorflow<br>pip3 install tensorflow-hub -i <a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a> –trusted-host pypi.douban.com</p><h1><span id="三学派">三学派</span></h1><ul><li>行为主义<br>基于控制论，构建感知动作控制系统<br></li><li>符号主义<br>基于算法逻辑表达式，求解问题时先把问题描述为表达式，再求解表达式<br></li><li>连接主义<br><br>仿生学，模仿神经元连接关系</li></ul><h1><span id="使用连接主义建立鸢尾花分类模型">使用连接主义建立鸢尾花分类模型</span></h1><ul><li><p>建立神经网络模型<br><br>  使用连接主义(MP模型)</p><ul><li>MP模型原型<br>  (特征*特征值+偏执向量)非线性函数–&gt; 输出</li><li>修改原模型<br>  特征*特征值+偏执向量</li></ul></li><li><p>损失函数<br> 这里采用均分误差</p><ul><li>MSE(y,_y) &#x3D; (((sum(n,k-0))(y-_y)^2)&#x2F;n) &#x2F;&#x2F;这里表示实际值与模拟值得差求平方求和再除n得到的是与标准答案的差距<br><br> 这里是为了找一个W和b使得损失函数最小</li></ul><p> 代码如下</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">import tensorflow as tf</span><br><span class="line"></span><br><span class="line">w = tf.Variable(tf.constant(5, dtype=tf.float32)) # 初始值为5 可学习</span><br><span class="line">lr = 0.2 # 学习率 0.2</span><br><span class="line">epoch = 50 # 学习次数50次</span><br><span class="line"></span><br><span class="line">for epoch in range(epoch):</span><br><span class="line">    with tf.GradientTape() as tape:</span><br><span class="line">        loss = tf.square(w + 1) # 损失函数</span><br><span class="line">    grads = tape.gradient(loss, w)</span><br><span class="line">    w.assign_sub(lr * grads)</span><br><span class="line">    print(epoch, w.numpy(), loss)</span><br></pre></td></tr></table></figure><p>运行结果<br><br><img src="https://i.postimg.cc/KvJPpsvq/diyi.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot; class=&quot;aplayer-se</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>srpingboot</title>
    <link href="http://chenxiuyuan7.github.io/2023/04/16/srpingboot/"/>
    <id>http://chenxiuyuan7.github.io/2023/04/16/srpingboot/</id>
    <published>2023-04-16T15:05:18.000Z</published>
    <updated>2023-04-16T16:29:16.133Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1><span id="第一次使用springboot">第一次使用springBoot</span></h1><h2><span id="打开springboot官网"></span></h2><ul><li>输入需要配置的文件名</li><li>在Dependencies中选择添加web</li><li>点击Generate</li></ul><h2><span id="实际开发">实际开发</span></h2><ul><li>idea选择Spring Initializr（Server URL实际走的还是<a href="https://start.spring.io/%E7%BD%91%E5%9D%80">https://start.spring.io/网址</a>)</li></ul><h2><span id="编写colltrolle文件">编写colltrolle文件</span></h2><p><img src="https://i.postimg.cc/LsNfNr5v/controlle.png"></p><ul><li>使用@RestController注解指定扫描类</li><li>使用@RequestMapping注解指向路径</li><li>返回一个字符串</li></ul><p>访问 <a href="http://localhost:8080/hello">http://localhost:8080/hello</a><br>显示如下<br><img src="https://i.postimg.cc/xdRGBXxv/image.png"><br>打包项目(idea自带的打包方式)<br><br><br><img src="https://i.postimg.cc/Wpf82J2S/jra.png"><br><br><br>附页<br>由于springboot3.0以后只能使用java17所以需要下载对应的版本<br><img src="https://i.postimg.cc/RVDDbD6S/java.png"><br><br><img src="https://i.postimg.cc/5NTsmQTj/spring.png"><br></p><div class="aplayer" data-id="1352962991" data-server="netease" data-type="song" data-preload="auto" data-theme="#3F51B5"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot; class=&quot;aplayer-se</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>吐槽一手网卡</title>
    <link href="http://chenxiuyuan7.github.io/2023/04/16/%E5%90%90%E6%A7%BD%E4%B8%80%E6%89%8B%E7%BD%91%E5%8D%A1/"/>
    <id>http://chenxiuyuan7.github.io/2023/04/16/%E5%90%90%E6%A7%BD%E4%B8%80%E6%89%8B%E7%BD%91%E5%8D%A1/</id>
    <published>2023-04-16T12:50:32.000Z</published>
    <updated>2023-04-16T14:06:28.082Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1><span id="构建一个项目用24分钟我真的要疯了">构建一个项目用24分钟我真的要疯了</span></h1><p><img src="https://i.postimg.cc/y8LdBJW7/397ac3aa7b58970537e868e98a1f30d.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot; class=&quot;aplayer-se</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>javaMVC学习记录</title>
    <link href="http://chenxiuyuan7.github.io/2023/04/12/javaMVC%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>http://chenxiuyuan7.github.io/2023/04/12/javaMVC%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2023-04-12T10:38:20.000Z</published>
    <updated>2023-04-18T06:35:43.484Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/css/APlayer.min.css"><script src="/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/js/Meting.min.js"></script><h1><span id="注册dispatcherservlet">注册DispatcherServlet</span></h1><p>DispatcherServlet作为Springmvc中最为重要的控制器需要调用请求映射器，处理适配器，视图解析器，视图，响应页面。<br><img src="https://i.postimg.cc/gjsGzyGp/Dispatchaer-Servlet.png"><br>如果要使用MVC首先就需要注册DispatcherServlet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;servlet&gt;</span><br><span class="line">       &lt;servlet-name&gt;Spring-mvc&lt;/servlet-name&gt;</span><br><span class="line">       &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;//DispatcherServlet路径</span><br><span class="line">       &lt;init-param&gt;</span><br><span class="line">           &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;</span><br><span class="line">           &lt;param-value&gt;classpath:spring-mvc-servlet.xml&lt;/param-value&gt;//spring配置文件路径(一般配置文件起名就叫spring-mvc-servlet.xml)</span><br><span class="line">       &lt;/init-param&gt;</span><br><span class="line">       &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;//启动级别最高（启动服务器时就注册）</span><br><span class="line">   &lt;/servlet&gt;</span><br><span class="line">   &lt;servlet-mapping&gt;</span><br><span class="line">       &lt;servlet-name&gt;Spring-mvc&lt;/servlet-name&gt;</span><br><span class="line">       &lt;url-pattern&gt;/&lt;/url-pattern&gt;//拦截那些请求  / 表示所有</span><br><span class="line">   &lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure><h1><span id="编写spring配置文件">编写spring配置文件</span></h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;context:component-scan base-package=&quot;com.chen.controller&quot;/&gt;</span><br><span class="line"></span><br><span class="line">        过滤css       js      html        mp3     mp4--&gt;</span><br><span class="line">&lt;mvc:default-servlet-handler/&gt;</span><br><span class="line">&lt;mvc:annotation-driven/&gt;</span><br></pre></td></tr></table></figure><p>context是用来开启包扫描<br><br>两个mvc直接抄就好</p><h2><span id="视图解析器">视图解析器</span></h2><p>视图解析器在springmvc中是用来匹配前缀和后缀的<br>        视图解析器器</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;bean class=&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot; id=&quot;internalResourceViewResolver&quot;&gt;</span><br><span class="line">    &lt;property name=&quot;prefix&quot; value=&quot;/WEB-INF/jsp/&quot;/&gt;//</span><br><span class="line">    &lt;property name=&quot;suffix&quot; value=&quot;.jsp&quot;/&gt;</span><br><span class="line">&lt;/bean&gt;</span><br></pre></td></tr></table></figure><h3><span id="前缀-amp-后缀">前缀 &amp; 后缀</span></h3><p>prefix表示前缀（这里不过多赘述）这里面填写的是所有jsp文件存放的位置的<br><br>suffix表示后缀（这里不过多赘述）这里面填写的是所有jsp文件的后缀<br><br>因为视图解析器是用来处理返回url的名称的前置的后置的<br><br><br>编写完spring配置文件基本的springmvc配置的完成了至于manven就直接导下面这个</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependencies&gt;</span><br><span class="line">        &lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;org.springframework&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;5.2.0.RELEASE&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;servlet-api&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.5&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;provided&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;junit&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;junit&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;4.13.2&lt;/version&gt;</span><br><span class="line">            &lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">    &lt;/dependencies&gt;</span><br></pre></td></tr></table></figure><div class="aplayer" data-id="1300669795" data-server="netease" data-type="song" data-preload="auto" data-theme="#3F51B5"></div>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/js/APlayer.min.js&quot; class=&quot;aplayer-se</summary>
      
    
    
    
    
  </entry>
  
</feed>
